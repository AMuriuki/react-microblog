{"ast":null,"code":"var _jsxFileName = \"/home/arnold/projects/react-microblog/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Post from './Post';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_API_URL = process.env.REACT_APP_BASE_API_URL;\nexport default function Posts() {\n  _s();\n  const [posts, setPosts] = useState();\n  const api = useAp;\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(`${BASE_API_URL}/api/posts`);\n      if (response.ok) {\n        const results = await response.json();\n        setPosts(results.data);\n      } else {\n        setPosts(null);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts === undefined ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no blog posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 47\n      }, this))\n    }, void 0, false)\n  }, void 0, false);\n}\n_s(Posts, \"gNpU8K6D9yXWS6G6mu7mBiUIyfk=\");\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","Spinner","Post","BASE_API_URL","process","env","REACT_APP_BASE_API_URL","Posts","posts","setPosts","api","useAp","response","fetch","ok","results","json","data","undefined","length","map","post","id"],"sources":["/home/arnold/projects/react-microblog/src/components/Posts.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Post from './Post'\n\nconst BASE_API_URL = process.env.REACT_APP_BASE_API_URL;\n\nexport default function Posts() {\n    const [posts, setPosts] = useState();\n    const api = useAp\n\n    useEffect(() => {\n        (async () => {\n            const response = await fetch(`${BASE_API_URL}/api/posts`);\n            if (response.ok) {\n                const results = await response.json();\n                setPosts(results.data);\n            } else {\n                setPosts(null);\n            }\n        })();\n    }, [])\n\n    return (\n        <>\n            {\n                posts === undefined ?\n                    <Spinner animation=\"border\" />\n                    :\n                    <>\n                        {posts.length === 0 ?\n                            <p>There are no blog posts</p>\n                            :\n                            posts.map(post => <Post key={post.id} post={post} />)\n                        }\n                    </>\n            }\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,IAAI,MAAM,QAAQ;AAAA;AAAA;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,eAAe,SAASC,KAAK,GAAG;EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,EAAE;EACpC,MAAMW,GAAG,GAAGC,KAAK;EAEjBX,SAAS,CAAC,MAAM;IACZ,CAAC,YAAY;MACT,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,YAAa,YAAW,CAAC;MACzD,IAAIS,QAAQ,CAACE,EAAE,EAAE;QACb,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;QACrCP,QAAQ,CAACM,OAAO,CAACE,IAAI,CAAC;MAC1B,CAAC,MAAM;QACHR,QAAQ,CAAC,IAAI,CAAC;MAClB;IACJ,CAAC,GAAG;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,UAEQD,KAAK,KAAKU,SAAS,gBACf,QAAC,OAAO;MAAC,SAAS,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,gBAE9B;MAAA,UACKV,KAAK,CAACW,MAAM,KAAK,CAAC,gBACf;QAAA,UAAG;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAI,GAE9BX,KAAK,CAACY,GAAG,CAACC,IAAI,iBAAI,QAAC,IAAI;QAAe,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAC;EAE1D,iBAEZ;AAEX;AAAC,GAhCuBf,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}